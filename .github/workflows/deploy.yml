---
name: Deploy latest container image to server

on:
  workflow_dispatch:
  push:
    branches:
      - main
    paths:
      - content/**
      - layouts/**
      - assets/**
jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
      DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}
      FORCE_COLOR: 1
      EARTHLY_VERSION: v0.8.13
      EARTHLY_PATH: /opt/earthly/v0.8.13
    permissions:
      contents: write
    steps:
    - uses: actions/checkout@v4
    - name: Check cache for earthly binary
      id: earthly-binary
      uses: actions/cache@v4
      with:
        path: /opt/earthly/v0.8.13
        # If version changes, a new binary will be downloaded
        key: earthly-${{ runner.os }}-${{ env.EARTHLY_VERSION }}
    - name: Download binary if not cached
      if: steps.earthly-binary.outputs.cache-hit != 'true'
      run: |
        mkdir -p "$EARTHLY_PATH"
        curl -L -o "$EARTHLY_PATH"/earthly https://github.com/earthly/earthly/releases/download/$EARTHLY_VERSION/earthly-linux-amd64
        chmod +x $EARTHLY_PATH/earthly
    - name: Add earthly to PATH
      run: echo "$EARTHLY_PATH" >> $GITHUB_PATH
    - name: Cache Docker images for earthly
      uses: ScribeMD/docker-cache@0.5.0
      with:
        key: docker-${{ runner.os }}-${{ hashFiles('Earthfile') }}
    - name: Pull image if not cached
      if: steps.docker-cache.outputs.cache-hit != 'true'
      run: |
          # Searching through Earthfile and find all used images
          images=$(grep -Eo "FROM\s([a-zA-Z]+.+)" "./Earthfile" | awk '{ match($0, /FROM\s([a-zA-Z]+.+)/, arr); print arr[1] }')
          for image in $images; do
            docker pull $image
          done;
    - name: Docker Login
      run: docker login --username "$DOCKERHUB_USERNAME" --password "$DOCKERHUB_TOKEN"
    - name: Deploying to vm via earthly
      run: |
        earthly --ci --secret host="${{ secrets.SSH_HOST }}" \
                     --secret port="${{ secrets.SSH_PORT }}" \
                     --secret username="${{ secrets.SSH_USER }}" \
                     --secret key="${{ secrets.SSH_KEY }}" \
                     --secret known_hosts="${{ secrets.SSH_KNOWN_HOSTS }}" \
                     --secret dir="${{ secrets.DIR }}"\
                     +deploy
  test:
    runs-on: ubuntu-latest
    needs: deploy
    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-python@v5
      with:
        python-version: '3.12'
        cache: 'pip' # caching pip dependencies
    - name:
      run: |
        python -m pip install --upgrade pip
        pip install -r ci/requirements.txt
    - name: Check different HTTP endpoints for their responses
      run: |
        python ci/check_response.py

